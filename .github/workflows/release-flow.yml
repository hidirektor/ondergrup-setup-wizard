name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  macos-build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build project (MacOS)
        run: mvn clean package

      - name: Rename JAR file (MacOS)
        run: mv target/*.jar macos_Setup.jar

      - name: Upload artifact (MacOS)
        uses: actions/upload-artifact@v3
        with:
          name: macos_Setup
          path: macos_Setup.jar

  ubuntu-build:
    needs: macos-build
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build project (Ubuntu)
        run: mvn clean package

      - name: Rename JAR file (Ubuntu)
        run: mv target/*.jar unix_Setup.jar

      - name: Upload artifact (Ubuntu)
        uses: actions/upload-artifact@v3
        with:
          name: unix_Setup
          path: unix_Setup.jar

  windows-build:
    needs: ubuntu-build
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build project (Windows)
        run: mvn clean package

      - name: Rename JAR file (Windows)
        run: mv target/*.jar ondergrup-setup-wizard.jar

      - name: Install Launch4j (Windows)
        run: |
          Invoke-WebRequest -Uri "https://github.com/hidirektor/ondergrup-setup-wizard/raw/master/launch4j/launch4j-3.50-win32.exe" -OutFile "launch4j-setup.exe"
          Start-Process -FilePath "launch4j-setup.exe" -ArgumentList "/S" -NoNewWindow -Wait

      - name: Generate EXE using Launch4j (Windows)
        run: |
          & "C:\Program Files (x86)\Launch4j\launch4jc.exe" "ondergrup-setup-wizard-config.xml"

      - name: Rename EXE file (Windows)
        run: mv target/*.exe windows_Setup.exe

      - name: Upload artifact (Windows)
        uses: actions/upload-artifact@v3
        with:
          name: windows_Setup
          path: windows_Setup.exe

  release:
    needs: [macos-build, ubuntu-build, windows-build]
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine next version
        id: version
        run: |
          CURRENT_VERSION=$(grep 'CURRENT_VERSION' src/main/java/me/t3sl4/installer/utils/system/Definitions.java | sed -E 's/.*"([0-9]+\.[0-9]+\.[0-9]+)".*/\1/')
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          NEXT_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"
          echo "version=$NEXT_VERSION" >> $GITHUB_ENV

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Prepare artifacts for release
        run: |
          mkdir -p artifacts
          cp macos_Setup/macos_Setup.jar artifacts/
          cp unix_Setup/unix_Setup.jar artifacts/
          cp windows_Setup/windows_Setup.exe artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.version }}
          name: "Release v${{ env.version }}"
          body: "Changelog:\n\n${{ github.event.head_commit.message }}"
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}