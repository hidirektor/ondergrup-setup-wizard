name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-14-arm64, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build project (Ubuntu/MacOS)
        if: matrix.os != 'windows-latest'
        run: mvn clean package

      - name: Rename JAR file (Ubuntu)
        if: matrix.os == 'ubuntu-20.04'
        run: mv target/*.jar unix_Setup.jar

      - name: Rename JAR file (MacOS)
        if: matrix.os == 'macos-14-arm64'
        run: mv target/*.jar macos_Setup.jar

      - name: Install Launch4j (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri "https://github.com/hidirektor/ondergrup-setup-wizard/raw/master/launch4j/launch4j-3.50-win32.exe" -OutFile "launch4j-setup.exe"
          Start-Process -FilePath "launch4j-setup.exe" -ArgumentList "/S" -NoNewWindow -Wait

      - name: Download Launch4j Config
        if: matrix.os == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri "https://github.com/hidirektor/ondergrup-setup-wizard/raw/master/launch4j/ondergrup-setup-wizard-config.xml" -OutFile "ondergrup-setup-wizard-config.xml"

      - name: Check Launch4j Installation (Windows)
        if: matrix.os == 'windows-latest'
        run: Get-ChildItem -Path "C:\Program Files (x86)\Launch4j"

      - name: Generate EXE using Launch4j (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          "C:\Program Files (x86)\Launch4j\launch4j.exe" ondergrup-setup-wizard-config.xml

      - name: Rename EXE file (Windows)
        if: matrix.os == 'windows-latest'
        run: mv target/*.exe windows_Setup.exe

      - name: Determine next version
        id: version
        run: |
          CURRENT_VERSION=$(grep 'CURRENT_VERSION' src/main/java/me/t3sl4/installer/utils/system/Definitions.java | sed -E 's/.*"([0-9]+)".*/\1/')
          NEXT_VERSION=$((CURRENT_VERSION + 1))
          echo "version=$NEXT_VERSION" >> $GITHUB_ENV

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv windows_Setup.exe artifacts/
          elif [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
            mv unix_Setup.jar artifacts/
          else
            mv macos_Setup.jar artifacts/
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.version }}
          name: Release v${{ env.version }}
          body: ${{ github.event.head_commit.message }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.SETUP_TOKEN }}