name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build project (Ubuntu/MacOS)
        if: matrix.os != 'windows-latest'
        run: mvn clean package

      - name: Install Launch4j (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          curl -L -o launch4j-setup.exe https://github.com/hidirektor/ondergrup-setup-wizard/blob/master/launch4j/launch4j-3.50-win32.exe
          start /wait launch4j-setup.exe /S

      - name: Generate EXE using Launch4j (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          launch4j \path\to\ondergrup-setup-wizard-config.xml

      - name: Determine next version
        id: version
        run: |
          CURRENT_VERSION=$(grep 'CURRENT_VERSION' src/main/java/me/t3sl4/installer/utils/system/Definitions.java | sed -E 's/.*"([0-9]+)".*/\1/')
          NEXT_VERSION=$((CURRENT_VERSION + 1))
          echo "version=$NEXT_VERSION" >> $GITHUB_ENV

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv target/*.exe artifacts/
          else
            mv target/*.jar artifacts/
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.version }}
          name: Release v${{ env.version }}
          body: ${{ github.event.head_commit.message }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.SETUP_TOKEN }}
